<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* All previous styles exactly the same */
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            font-size: 18px;
        }
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .reset-btn {
            background: #ff6b6b;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.3s;
            font-size: 20px;
            font-weight: bold;
        }
        .reset-btn:hover {
            background: #ff5252;
        }
        .qc-item {
            background: #f7f7f7;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: background-color 0.3s;
        }
        .qc-item.complete {
            background: #90EE90;
        }
        .item-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #ddd;
        }
        .item-title {
            font-size: 24px;
            font-weight: bold;
        }
        .item-weight {
            background: #e9ecef;
            padding: 8px 12px;
            border-radius: 4px;
            font-size: 18px;
        }
        .rating-group {
            margin: 15px 0;
        }
        .rating-options {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 10px;
        }
        .rating-btn {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            background: white;
            cursor: pointer;
            transition: all 0.3s;
            min-height: 100px;
        }
        .rating-btn .number {
            font-size: 32px;
            font-weight: bold;
            margin-bottom: 8px;
        }
        .rating-btn .description {
            font-size: 16px;
            text-align: center;
            line-height: 1.4;
        }
        .rating-btn.selected {
            background: #4CAF50;
            color: white;
            border-color: #4CAF50;
        }
        .notes {
            width: 100%;
            margin: 15px 0;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            min-height: 120px;
            box-sizing: border-box;
            font-size: 18px;
        }
        .image-upload {
            margin: 15px 0;
        }
        .image-upload input[type="file"] {
            height: 50px;
            font-size: 16px;
        }
        .image-preview {
            max-width: 100%;
            margin-top: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .section-label {
            font-weight: bold;
            margin-bottom: 10px;
            color: #333;
            font-size: 20px;
        }
        h2 {
            font-size: 28px;
        }
        .loading {
            text-align: center;
            padding: 20px;
            font-size: 20px;
            color: #666;
        }
        .error {
            background: #ffebee;
            color: #c62828;
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <!-- Rest of the HTML and JavaScript remains exactly the same -->
    <div class="header">
        <h2>Quality Control Checklist</h2>
        <button class="reset-btn" onclick="resetForm()">Reset All Items</button>
    </div>
    
    <div id="checklist-container">
        <div class="loading">Loading checklist items...</div>
    </div>

    <script>
        let checklistItems = [];

        async function loadChecklist() {
            try {
                const response = await fetch('https://ultraexpress.github.io/QC/riverside-checklist.json');
                if (!response.ok) throw new Error('Failed to load checklist data');
                
                const data = await response.json();
                checklistItems = data.items.map(item => ({
                    ...item,
                    score: 0,
                    notes: "",
                    image: null
                }));
                
                renderChecklist();
            } catch (error) {
                document.getElementById('checklist-container').innerHTML = `
                    <div class="error">
                        Error loading checklist: ${error.message}
                        <br>Please refresh the page to try again.
                    </div>
                `;
            }
        }

        function renderChecklist() {
            const container = document.getElementById('checklist-container');
            container.innerHTML = checklistItems.map((item, index) => `
                <div class="qc-item" data-id="${item.id}">
                    <div class="item-header">
                        <span class="item-title">${item.name}</span>
                        <span class="item-weight">Weight: ${item.weight}</span>
                    </div>
                    
                    <div class="rating-group">
                        <div class="section-label">Quality Rating</div>
                        <div class="rating-options">
                            ${[1,2,3,4,5].map(rating => `
                                <button class="rating-btn" onclick="setRating(${index}, ${rating})">
                                    <span class="number">${rating}</span>
                                    <span class="description">${getRatingDescription(rating)}</span>
                                </button>
                            `).join('')}
                        </div>
                    </div>

                    <div>
                        <div class="section-label">Notes</div>
                        <textarea class="notes" 
                            onchange="updateNotes(${index}, this.value)" 
                            placeholder="Enter detailed observations here...">${item.notes}</textarea>
                    </div>

                    <div class="image-upload">
                        <div class="section-label">Upload Images</div>
                        <input type="file" 
                            accept="image/*" 
                            multiple 
                            onchange="handleImageUpload(${index}, event)">
                        <div class="image-preview-${index}"></div>
                    </div>
                </div>
            `).join('');
            
            checklistItems.forEach((item, index) => {
                checkComplete(index);
            });
        }

        function getRatingDescription(rating) {
            const descriptions = {
                1: "Critical Issues<br>Immediate Action Required",
                2: "Major Issues<br>Needs Significant Work",
                3: "Minor Issues<br>Acceptable with Fixes",
                4: "Good Quality<br>Minor Improvements",
                5: "Perfect Quality<br>Meets All Standards"
            };
            return descriptions[rating];
        }

        function checkComplete(index) {
            const item = checklistItems[index];
            const hasScore = item.score > 0;
            const hasNotes = item.notes.trim() !== '';
            const hasImage = item.image !== null;
            
            const itemElement = document.querySelector(`.qc-item[data-id="${item.id}"]`);
            if (hasScore && hasNotes && hasImage) {
                itemElement.classList.add('complete');
            } else {
                itemElement.classList.remove('complete');
            }
        }

        function setRating(index, rating) {
            const itemElement = document.querySelector(`.qc-item[data-id="${checklistItems[index].id}"]`);
            const buttons = itemElement.querySelectorAll('.rating-btn');
            
            buttons.forEach(btn => {
                btn.classList.remove('selected');
                if (parseInt(btn.querySelector('.number').textContent) === rating) {
                    btn.classList.add('selected');
                }
            });
            
            checklistItems[index].score = rating;
            checkComplete(index);
        }

        function updateNotes(index, notes) {
            checklistItems[index].notes = notes;
            checkComplete(index);
        }

        function handleImageUpload(index, event) {
            const preview = document.querySelector(`.image-preview-${index}`);
            preview.innerHTML = '';
            
            for (const file of event.target.files) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.className = 'image-preview';
                    preview.appendChild(img);
                    checklistItems[index].image = e.target.result;
                    checkComplete(index);
                }
                reader.readAsDataURL(file);
            }
        }

        function resetForm() {
            if (confirm('Are you sure you want to reset all items? This will clear all ratings, notes, and images.')) {
                checklistItems.forEach(item => {
                    item.score = 0;
                    item.notes = '';
                    item.image = null;
                });
                renderChecklist();
            }
        }

        // Load the checklist when the page loads
        loadChecklist();
    </script>
</body>
</html>
